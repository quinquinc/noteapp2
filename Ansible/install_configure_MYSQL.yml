---
# - name: Install role
#   hosts: sql
#   become: true
#   tasks: 
#     - name: installation rôle geerlingguy.mysql
#       command: ansible-galaxy install geerlingguy.mysql

- name: Install and configure MySQL
  hosts: sql
  become: true
  vars_files:
    - vars.yml
  roles: 
    - geerlingguy.mysql

  tasks:
    - name: Mise à jour du cache des paquets 1
      apt:
        update_cache: yes

    - name: Installation de gpg
      apt:
        name: gnupg
        state: present

    - name: Install Pip3
      apt:
        name: python3-pip
        state: present

    - name: Install requirements
      pip: 
        name: 
          - tqdm
          - numpy
          - pandas
          - openpyxl
          - mysql-connector-python
          - PyMySQL
          - mysqlclient
        state: present

    # - name: Add MySQL repository key
    #   apt_key:
    #     url: https://repo.mysql.com/RPM-GPG-KEY-mysql
    #     state: present

    # - name: Add MySQL repository
    #   apt_repository:
    #     repo: "deb http://repo.mysql.com/apt/debian/ buster mysql-8.0"
    #     state: present

    # - name: Install MySQL server
    #   apt:
    #     name: mysql-server
    #     state: present
    #     update_cache: yes
    #     force_apt_get: yes
    #     debconf:
    #       name: mysql-server
    #       question: mysql-server/root_password
    #       value: "{{ mysql_root_password }}"
    #       vtype: password
    #       state: present
    #     environment:
    #       DEBIAN_FRONTEND: noninteractive

    # - name: Change MySQL root password
    #   mysql_user:
    #     name: root
    #     password: "{{ mysql_root_password }}"
    #     host: localhost
    #     login_user: root
    #     login_password: ""
    #     login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create MySQL databases
      mysql_db:
        name: "{{ item.name }}"
        state: present
      loop: "{{ mysql_databases }}"

    - name: Create MySQL user
      mysql_user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        priv: "{{ item.priv }}"
        state: present
      loop: "{{ mysql_users }}"
        
    - name: Start MySQL service
      service:
        name: mysql
        state: started

    # - name: Secure MySQL installation
    #   debconf:
    #     name: mysql-server
    #     question: mysql-server/root_password
    #     value: "{{ mysql_root_password }}"
    #     vtype: password

    # - name: Secure MySQL installation
    #   debconf:
    #     name: mysql-server
    #     question: mysql-server/root_password_again
    #     value: "{{ mysql_root_password }}"
    #     vtype: password

    # - name: Restart MySQL service
    #   service:
    #     name: mysql
    #     state: restarted

    # - name: Create databases
    #   mysql_db:
    #     name: "{{ item }}"
    #     state: present
    #   loop:
    #     - cis_nord_warwait
    #     - skillmatrix

    # - name: Create MySQL user
    #   mysql_user:
    #     name: "{{ mysql_user }}"
    #     password: "{{ mysql_password }}"
    #     priv: "*.*:ALL,GRANT"
    #     state: present

    - name: Install Git
      apt:
        name: git
        state: present

    - name: Créer un dossier s'il n'existe pas déjà
      file:
        path: /home/admin/app
        state: directory

    - name: Clone Git repository
      git:
        repo: https://github.com/simonLongatte/Projectwarwaitcap.git
        dest: /home/admin/app
        version: development

    

    - name: Mettre à jour les valeurs d'utilisateur et de mot de passe dans withoutGr.py
      ansible.builtin.lineinfile:
        path: /home/admin/Projet/AppPython/withoutGr.py
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^self.USER = .*', line: 'self.USER = "{{ mysql_user }}"' }
        - { regexp: '^self.PASSWORD = .*', line: 'self.PASSWORD = "{{ mysql_root_password }}"' }
      
    - name: Init Wait Room
      command: python3 Projet/AppPython/withoutGr.py -W '/home/admin/Wait_Room_2023.xlsx'
      args:
        chdir: /home/admin/app

    - name: Init Matrice
      command: python3 Projet/AppPython/withoutGr.py -MC '/home/admin/Matrice_des_competences.xlsx'
      args:
        chdir: /home/admin/app

    