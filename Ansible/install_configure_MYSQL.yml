---
# - name: Install role
#   hosts: sql
#   become: true
#   tasks: 
#     - name: installation rôle geerlingguy.mysql
#       command: ansible-galaxy install geerlingguy.mysql

- name: Install and configure MySQL
  hosts: sql
  become: true
  vars_files:
    - vars.yml
  # roles:
  #   - name: geerlingguy.mysql
  #     vars:
  #       mysql_package: mysql-server

  tasks:
    - name: Mise à jour du cache des paquets 1
      apt:
        update_cache: yes

    - name: Installation de gpg
      apt:
        name: gnupg
        state: present
    - name: Add MySQL APT repository
      apt_repository:
        repo: "deb http://repo.mysql.com/apt/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} mysql-apt-config"
        state: present
        filename: mysql-apt-config

    - name: Import MySQL APT GPG key
      apt_key:
        url: https://repo.mysql.com/RPM-GPG-KEY-mysql
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MySQL Server package
      apt:
        name: mysql-server
        state: present

    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: true

    - name: Set MySQL root password
      debconf:
        name: 'mysql-server'
        question: 'mysql-server/root_password'
        value: "{{ mysql_root_password }}"
        vtype: 'password'
        state: present

    - name: Create MySQL user
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: '*.*:ALL'
        host: '%'
        state: present

    - name: Create MySQL databases
      mysql_db:
        name: cis_nord_warwait
        state: present

    - name: Create another MySQL database
      mysql_db:
        name: skillmatrix
        state: present
    - name: Install Pip3
      apt:
        name: python3-pip
        state: present

    - name: Install requirements
      pip: 
        name: 
          - tqdm
          - numpy
          - pandas
          - openpyxl
          - mysql-connector-python
          - PyMySQL
          - mysqlclient
        state: present

    # - name: Add MySQL repository key
    #   apt_key:
    #     url: https://repo.mysql.com/RPM-GPG-KEY-mysql
    #     state: present

    # - name: Add MySQL repository
    #   apt_repository:
    #     repo: "deb http://repo.mysql.com/apt/debian/ buster mysql-8.0"
    #     state: present

    # - name: Install MySQL server
    #   apt:
    #     name: mysql-server
    #     state: present
    #     update_cache: yes
    #     force_apt_get: yes
    #     debconf:
    #       name: mysql-server
    #       question: mysql-server/root_password
    #       value: "{{ mysql_root_password }}"
    #       vtype: password
    #       state: present
    #     environment:
    #       DEBIAN_FRONTEND: noninteractive

    # - name: Change MySQL root password
    #   mysql_user:
    #     name: root
    #     password: "{{ mysql_root_password }}"
    #     host: localhost
    #     login_user: root
    #     login_password: ""
    #     login_unix_socket: /var/run/mysqld/mysqld.sock

    # - name: Create MySQL databases
    #   mysql_db:
    #     name: "{{ item.name }}"
    #     state: present
    #   loop: "{{ mysql_databases }}"

    # - name: Create MySQL user
    #   mysql_user:
    #     name: "{{ item.name }}"
    #     password: "{{ item.password }}"
    #     priv: "{{ item.priv }}"
    #     state: present
    #     host: "%"
    #   loop: "{{ mysql_users }}"
        
    # - name: Start MySQL service
    #   service:
    #     name: mysql
    #     state: started

    # - name: Secure MySQL installation
    #   debconf:
    #     name: mysql-server
    #     question: mysql-server/root_password
    #     value: "{{ mysql_root_password }}"
    #     vtype: password

    # - name: Secure MySQL installation
    #   debconf:
    #     name: mysql-server
    #     question: mysql-server/root_password_again
    #     value: "{{ mysql_root_password }}"
    #     vtype: password

    # - name: Restart MySQL service
    #   service:
    #     name: mysql
    #     state: restarted

    # - name: Create databases
    #   mysql_db:
    #     name: "{{ item }}"
    #     state: present
    #   loop:
    #     - cis_nord_warwait
    #     - skillmatrix

    # - name: Create MySQL user
    #   mysql_user:
    #     name: "{{ mysql_user }}"
    #     password: "{{ mysql_password }}"
    #     priv: "*.*:ALL,GRANT"
    #     state: present

    

    - name: Install Git
      apt:
        name: git
        state: present

    - name: Créer un dossier s'il n'existe pas déjà
      file:
        path: /home/admin/app
        state: directory

    - name: Clone Git repository
      git:
        repo: https://github.com/simonLongatte/Projectwarwaitcap.git
        dest: /home/admin/app
        version: development
        force: yes

    

    - name: Mettre à jour les valeurs d'utilisateur et de mot de passe dans withoutGr.py
      template:
        src: withoutGr.py.j2
        dest: /home/admin/app/Projet/AppPython/withoutGr.py
      
    - name: Init Wait Room
      command: python3 Projet/AppPython/withoutGr.py -W '/home/admin/Wait_Room_2023.xlsx'
      args:
        chdir: /home/admin/app

    - name: Init Matrice
      command: python3 Projet/AppPython/withoutGr.py -MC '/home/admin/Matrice_des_competences.xlsx'
      args:
        chdir: /home/admin/app

- name: Dernières modifications apache2
  hosts: web
  become: true
  tasks:
    - name: Set ownership for /var/www/html
      file:
        path: /var/www/html
        owner: www-data
        group: www-data
        recurse: yes

    - name: Set execute permissions for /var/www/html/script
      ansible.builtin.file:
        path: /var/www/html/script
        recurse: yes
        mode: "a+x"

    - name: Modify Apache configuration
      ansible.builtin.lineinfile:
        path: /etc/apache2/apache2.conf
        regexp: '^<Directory /var/www/>'
        line: '<Directory /var/www/html/>'

    - name: Install MySQL Client on Debian/Ubuntu
      apt:
        name: default-mysql-client
        state: present


    - name: restart apache2
      service:
        name: apache2
        state: restarted