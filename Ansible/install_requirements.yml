---
- name: Install PHP, Python, Git, Pip...
  hosts: web
  become: true

  tasks:
    - name: Add PHP repository to sources.list.d
      copy:
        content: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main\n"
        dest: /etc/apt/sources.list.d/php.list
        mode: '0644'
    
    - name: Download PHP GPG key
      get_url:
        url: https://packages.sury.org/php/apt.gpg
        dest: /etc/apt/trusted.gpg.d/php.gpg
        mode: '0644'

    - name: Install apache2
      apt:
        update_cache: true
        name: apache2
        state: present

    - name: Install Git
      apt:
        name: git
        state: present

    - name: Install Pip3
      apt:
        name: python3-pip
        state: present

    - name: Install tools
      apt:
        name:
          - lsb-release
          - apt-transport-https 
          - ca-certificates 
          - software-properties-common
          - wget 
          - curl 
        state: present

    - name: Install PHP 8.2 and Apache mod
      apt:
        update_cache: true
        name:
          - php8.2
          - libapache2-mod-php8.2
        state: present
      tags: [php]

    - name: activer php 
      command: a2enmod php8.2

    - name: restart apache2
      command: service apache2 restart


- name: Créer le fichier app.conf
  hosts: web
  become: true

  tasks:
    - name: Copier le modèle du fichier app.conf
      template:
        src: app.conf.j2
        dest: /etc/apache2/sites-available/app.conf

    - name: Obtenir l'adresse IP publique
      shell: "curl -s ifconfig.me/ip"
      register: public_ip_result

    - name: Extraire l'adresse IP publique
      set_fact:
        public_ip: "{{ public_ip_result.stdout | regex_findall('\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}') | first }}"

    - name: Remplacer ServerName dans app.conf
      replace:
        path: /etc/apache2/sites-available/app.conf
        regexp: 'ServerName\s*<SERVER_NAME>'
        replace: 'ServerName {{ public_ip }}'
        backup: yes

    - name: Ajouter ServerName dans apache2.conf
      lineinfile:
        path: /etc/apache2/apache2.conf
        line: 'ServerName {{ public_ip }}'
        insertafter: EOF

    - name: Install PDO MySQL extension for PHP
      apt:
        name: php8.2-mysql
        state: present

    - name: Activer le site
      command: a2ensite app.conf

    - name: Redémarrer Apache
      service:
        name: apache2
        state: restarted

    - name: Décommenter pdo_mysql.so
      replace: 
        path: /etc/php/8.2/cli/php.ini
        regexp: ';extension=pdo_mysql'
        replace: 'extension=/usr/lib/php/20220829/pdo_mysql.so'

    

- name: Installer, configurer et déployer app.conf
  hosts: web
  become: true
  vars_files:
    - vars.yml
  roles:
    - ssl_config  
  tasks:
    - name: Créer un dossier s'il n'existe pas déjà
      file:
        path: /home/admin/app
        state: directory

    - name: Clone Git repository
      git:
        repo: https://github.com/simonLongatte/Projectwarwaitcap.git
        dest: /home/admin/app
        version: development
        force: yes
  
    - name: Modifier les valeurs de connexion dans bdd.php
      template:
        src: bdd.php.j2
        dest: /home/admin/app/Projet/Application/lib/bdd.php

    - name: Modifier le fichier id_db.txt
      template:
        src: id_db.txt.j2
        dest: /home/admin/app/Projet/Application/etc/id_db.txt
      vars:
        host: "{{ hostvars[groups['sql'][0]]['inventory_hostname'] }}"

    
    - name: Déplacer les fichiers
      shell: |
        cp -R /home/admin/app/Projet/Application/* /var/www/html
        mv /var/www/html/view/* /var/www/html
      args:
        executable: /bin/bash
      become: true

    
    - name: désactiver site par défaut et activer app.conf
      shell: | 
        a2dissite 000-default.conf
        a2ensite app.conf
      args:
        executable: /bin/bash
      become: true
      
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
 
- name: Installer, configurer et déployer app.conf
  hosts: sql
  become: true
  tasks:
  - name: install debian-mysql role 
    command: ansible-galaxy install cowops.debian-mysql

